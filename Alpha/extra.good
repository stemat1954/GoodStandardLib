
page extra in alpha@good


type extra from direct_access<object> -- intrinsic, restricted
{{
	An object of type extra contains unspecified objects
	given to a procedure after inputs and outputs.

	The compiler automatically creates and initializes an 
	extra object.
		
	Applications must use runtime methods to determine the
	actual type of objects contained in a given extra. 
	Generally, a procedure that accepts extra objects must
	also receive some kind of definite input that provides 
	a map of the objects in extra.

	A given extra object can be forwarded to another proc-
	edure by giving it as the first object in a list of
	extra objects passed to the other procedure.

	Some applications may need to delete objects before
	forwarding.  :delete removes a specified number of 
	objects in given order.  

	New objects given after extra when forwarding are
	added to the list received by the other procedure.
		

	@given\extra:use( i )[eval]:as<thing>
	@given\extra:use( i )[upd]:as<thing>
	@given\extra:use( i ):as_actual<thing>


}}
{
	general
	{
		delete [upd]( int q [opt] );  -- q objects from front
	}

	general  -- similar in direct_access<t>
	{
		count ()( int );

		use ( int i ) = object proxy; 
	}

	abstract in direct_access<object>
	{
		[final] ~count ()( int n );

		[final] ~use ( int i ) = object proxy;
	}
}
