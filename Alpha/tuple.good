
page tuple in alpha@good



type tuple<#><t> from uniform_set<<t>>  -- compatible, conventional
{{
	A tuple<#><t> is a fixed-size object array.

	<#> is the symbolic tuple dimension. <t> is the symbolic
	object type. The adhoc type must be a complete type.

	Since object count is known at compile time, implemen-
	tation can be optimized.

	Objects are created when the tuple is initialized. They 
	(the objects) may also be intialized (or not) depending
	on which :begin method is called.

	A tuple is portable if <t> is portable. See Alpha type
	reference for supported formats.

	Generic binary 'b' is supported for any <t> that also
	supports generic binary 'b'.
}}
{
	general 
	{
		begin;	-- all objects null

		begin ( <t> seed );	-- copy seed to all objects

		begin ( tuple<<#>><<t>> other ); -- copy 
		
		begin ( message [upd], expr fex )()( extra ); -- fread

		fwrite ( message [upd], expr fex )()( extra );
	}

	general -- similar in uniform_set<<t>>
	{
		count ()( int n );

		use_object ( int i ) = <t> proxy [eval,upd]; 
	}

	abstract in uniform_set<<t>>
	{
		[final]	~count ()( int n );

		[final] ~use_object ( int i ) = <t> proxy;
	}
}

